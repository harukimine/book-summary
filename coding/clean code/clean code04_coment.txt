4．コメント
・良くて必要悪
  - 適切に表現できないコードを補うもの
    - コメントを使う＝失敗
    - 表現力のなさに絶望しろ

  - コメントは嘘の可能性
    - 古い
    - 遠い
    - コメントの管理は困難
    - 置き去り

  - 不正確なコメント
    - 不要
    - 有害
    - 古い規則

  - コメントよりコード
    - コードにのみ真実
    - コメントでダメなコードを修繕できはしない




・自分自身をコードの中で説明
  - コードで意図は説明できる
  - 数秒の工夫で改善できる




・良いコメント
  - 内容を良く表す長い名前は，長いコメントより優れている
  - 外部ドキュメントへの参照
  - 裏の意図を説明する時
  - 明確化
    - 変更できないコード（標準ライブラリ）
    - コメントの間違いに注意

  - 結果に対する警告
    - ignore case

  - TODO，強調
    - 将来的に対処すべきもの
    - 現在は対処できない
    - 筋の通らない事




・気を付ける事
  - ぶつぶつ言う
    - 他モジュールを調べないと分からない
    - 十分注意を払わない

  - 冗長なコメント
    - コード自体を上回る情報がない
    - 本文より読む時間がかかる
    - コードより不正確
    - 不明瞭
    - 文書化の目的がない

  - 誤解を招くコメント
    - 微妙にずれた表現
    - 不正確
    - 間違った使われ方をされる

  - 命令コメント
    - 全ての関数に docstringを強制
    - 全ての変数名にコメントを強制
    - 嘘の伝播

  - 日誌コメント

  - ノイズコメント
    - 単なる言いかえ
    - 新しい情報提供がない
    - 場所が違う

  - バーナー（道標）
    - 特定の場所にマーク
    - ある種の機能を集めることに意味はない

  - 閉じかっこコメント
    - 深いネスト関数には意味がある
    - そもそもネストを小さくしろよ

  - 属性と著名
    - ソースコード管理システムで補え

  - コードのコメントアウト
  - 重要性が分からない
  - 重要だから削除しないものと勘違い

  - HTML

  - 非局所的な情報
    - 対象コードのそばに書く
    - システム全体の話を局所的にしない

  - 多すぎる情報
    - 議論の履歴
    - 過度に詳細な記述

  - 不明確な繋がり
  - コメント自身に更なる説明が要らない様にする

  - 関数ヘッダ
    - 短い関数に説明は不要

  - 関数の解説以上のこと

