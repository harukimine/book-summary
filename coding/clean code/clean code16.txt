16．リファクタリング
・まずは，動作するようにする
  - テストカバレッジ
    - 分離するために，完全に理解する
    - コードのコメントアウトを無くす
    - アルゴリズムのミスに気付ける
    - 変更の保険




・そして正しく直す
  - 大量の言語（Java, HTML, Eng）を使わない
  - 言葉の正確さ
  - クラス名は，実装に関する情報を暗示する必要がない
  - ベースクラスが継承クラスの知識を持たないようにする
  - 整合性の追求
    - 関数で private を公開
  - パラメータ化
    - 容易に変数名が変更可能
  - 古いコメントを改良
  - static 変数とメゾッドを別クラスに移動
  - 抽象メゾッドを移動